   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm delay1000,4,4
  20              	 .section .text.callback,"ax",%progbits
  21              	 .align 2
  22              	 .global callback
  23              	 .thumb
  24              	 .thumb_func
  26              	callback:
  27              	.LFB227:
  28              	 .file 1 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2024 May 28 11:50:40
   5:../main.c     ****  *  Author: Administrator
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** 
  11:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
  12:../main.c     **** 
  13:../main.c     **** /**
  14:../main.c     **** 
  15:../main.c     ****  * @brief main() - Application entry point
  16:../main.c     ****  *
  17:../main.c     ****  * <b>Details of function</b><br>
  18:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  19:../main.c     ****  * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  20:../main.c     ****  * code.
  21:../main.c     ****  */
  22:../main.c     **** 
  23:../main.c     **** int delay1000;
  24:../main.c     **** 
  25:../main.c     **** void callback() {
  29              	 .loc 1 25 0
  30              	 .cfi_startproc
  31              	 
  32              	 
  33              	 
  34 0000 80B4     	 push {r7}
  35              	.LCFI0:
  36              	 .cfi_def_cfa_offset 4
  37              	 .cfi_offset 7,-4
  38 0002 00AF     	 add r7,sp,#0
  39              	.LCFI1:
  40              	 .cfi_def_cfa_register 7
  26:../main.c     **** 	if(delay1000 > 0) delay1000--;
  41              	 .loc 1 26 0
  42 0004 064B     	 ldr r3,.L3
  43 0006 1B68     	 ldr r3,[r3]
  44 0008 002B     	 cmp r3,#0
  45 000a 04DD     	 ble .L1
  46              	 .loc 1 26 0 is_stmt 0 discriminator 1
  47 000c 044B     	 ldr r3,.L3
  48 000e 1B68     	 ldr r3,[r3]
  49 0010 013B     	 subs r3,r3,#1
  50 0012 034A     	 ldr r2,.L3
  51 0014 1360     	 str r3,[r2]
  52              	.L1:
  27:../main.c     **** }
  53              	 .loc 1 27 0 is_stmt 1
  54 0016 BD46     	 mov sp,r7
  55              	.LCFI2:
  56              	 .cfi_def_cfa_register 13
  57              	 
  58 0018 5DF8047B 	 ldr r7,[sp],#4
  59              	.LCFI3:
  60              	 .cfi_restore 7
  61              	 .cfi_def_cfa_offset 0
  62 001c 7047     	 bx lr
  63              	.L4:
  64 001e 00BF     	 .align 2
  65              	.L3:
  66 0020 00000000 	 .word delay1000
  67              	 .cfi_endproc
  68              	.LFE227:
  70              	 .section .text.delay,"ax",%progbits
  71              	 .align 2
  72              	 .global delay
  73              	 .thumb
  74              	 .thumb_func
  76              	delay:
  77              	.LFB228:
  28:../main.c     **** 
  29:../main.c     **** void delay(int d) {
  78              	 .loc 1 29 0
  79              	 .cfi_startproc
  80              	 
  81              	 
  82              	 
  83 0000 80B4     	 push {r7}
  84              	.LCFI4:
  85              	 .cfi_def_cfa_offset 4
  86              	 .cfi_offset 7,-4
  87 0002 83B0     	 sub sp,sp,#12
  88              	.LCFI5:
  89              	 .cfi_def_cfa_offset 16
  90 0004 00AF     	 add r7,sp,#0
  91              	.LCFI6:
  92              	 .cfi_def_cfa_register 7
  93 0006 7860     	 str r0,[r7,#4]
  30:../main.c     **** 	delay1000 = d;
  94              	 .loc 1 30 0
  95 0008 064A     	 ldr r2,.L7
  96 000a 7B68     	 ldr r3,[r7,#4]
  97 000c 1360     	 str r3,[r2]
  31:../main.c     **** 	while(delay1000 > 0);
  98              	 .loc 1 31 0
  99 000e 00BF     	 nop
 100              	.L6:
 101              	 .loc 1 31 0 is_stmt 0 discriminator 1
 102 0010 044B     	 ldr r3,.L7
 103 0012 1B68     	 ldr r3,[r3]
 104 0014 002B     	 cmp r3,#0
 105 0016 FBDC     	 bgt .L6
  32:../main.c     **** }
 106              	 .loc 1 32 0 is_stmt 1
 107 0018 0C37     	 adds r7,r7,#12
 108              	.LCFI7:
 109              	 .cfi_def_cfa_offset 4
 110 001a BD46     	 mov sp,r7
 111              	.LCFI8:
 112              	 .cfi_def_cfa_register 13
 113              	 
 114 001c 5DF8047B 	 ldr r7,[sp],#4
 115              	.LCFI9:
 116              	 .cfi_restore 7
 117              	 .cfi_def_cfa_offset 0
 118 0020 7047     	 bx lr
 119              	.L8:
 120 0022 00BF     	 .align 2
 121              	.L7:
 122 0024 00000000 	 .word delay1000
 123              	 .cfi_endproc
 124              	.LFE228:
 126              	 .section .text.setFrequency,"ax",%progbits
 127              	 .align 2
 128              	 .global setFrequency
 129              	 .thumb
 130              	 .thumb_func
 132              	setFrequency:
 133              	.LFB229:
  33:../main.c     **** 
  34:../main.c     **** void setFrequency(int freq) {
 134              	 .loc 1 34 0
 135              	 .cfi_startproc
 136              	 
 137              	 
 138 0000 80B5     	 push {r7,lr}
 139              	.LCFI10:
 140              	 .cfi_def_cfa_offset 8
 141              	 .cfi_offset 7,-8
 142              	 .cfi_offset 14,-4
 143 0002 82B0     	 sub sp,sp,#8
 144              	.LCFI11:
 145              	 .cfi_def_cfa_offset 16
 146 0004 00AF     	 add r7,sp,#0
 147              	.LCFI12:
 148              	 .cfi_def_cfa_register 7
 149 0006 7860     	 str r0,[r7,#4]
  35:../main.c     **** 	PWM_SetDutyCycle(&PWM_0, freq/2);
 150              	 .loc 1 35 0
 151 0008 7B68     	 ldr r3,[r7,#4]
 152 000a DA0F     	 lsrs r2,r3,#31
 153 000c 1344     	 add r3,r3,r2
 154 000e 5B10     	 asrs r3,r3,#1
 155 0010 0548     	 ldr r0,.L10
 156 0012 1946     	 mov r1,r3
 157 0014 FFF7FEFF 	 bl PWM_SetDutyCycle
  36:../main.c     **** 	PWM_SetFreq(&PWM_0, freq);
 158              	 .loc 1 36 0
 159 0018 7B68     	 ldr r3,[r7,#4]
 160 001a 0348     	 ldr r0,.L10
 161 001c 1946     	 mov r1,r3
 162 001e FFF7FEFF 	 bl PWM_SetFreq
  37:../main.c     **** }
 163              	 .loc 1 37 0
 164 0022 0837     	 adds r7,r7,#8
 165              	.LCFI13:
 166              	 .cfi_def_cfa_offset 8
 167 0024 BD46     	 mov sp,r7
 168              	.LCFI14:
 169              	 .cfi_def_cfa_register 13
 170              	 
 171 0026 80BD     	 pop {r7,pc}
 172              	.L11:
 173              	 .align 2
 174              	.L10:
 175 0028 00000000 	 .word PWM_0
 176              	 .cfi_endproc
 177              	.LFE229:
 179              	 .section .text.stop,"ax",%progbits
 180              	 .align 2
 181              	 .global stop
 182              	 .thumb
 183              	 .thumb_func
 185              	stop:
 186              	.LFB230:
  38:../main.c     **** 
  39:../main.c     **** void stop() {
 187              	 .loc 1 39 0
 188              	 .cfi_startproc
 189              	 
 190              	 
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI15:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 00AF     	 add r7,sp,#0
 197              	.LCFI16:
 198              	 .cfi_def_cfa_register 7
  40:../main.c     **** 	PWM_SetDutyCycle(&PWM_0, 0);
 199              	 .loc 1 40 0
 200 0004 0248     	 ldr r0,.L13
 201 0006 0021     	 movs r1,#0
 202 0008 FFF7FEFF 	 bl PWM_SetDutyCycle
  41:../main.c     **** }
 203              	 .loc 1 41 0
 204 000c 80BD     	 pop {r7,pc}
 205              	.L14:
 206 000e 00BF     	 .align 2
 207              	.L13:
 208 0010 00000000 	 .word PWM_0
 209              	 .cfi_endproc
 210              	.LFE230:
 212              	 .section .rodata
 213              	 .align 2
 214              	.LC0:
 215 0000 05010000 	 .word 261
 216 0004 15010000 	 .word 277
 217 0008 25010000 	 .word 293
 218 000c 37010000 	 .word 311
 219 0010 49010000 	 .word 329
 220 0014 5D010000 	 .word 349
 221 0018 71010000 	 .word 369
 222 001c 88010000 	 .word 392
 223 0020 9F010000 	 .word 415
 224 0024 B8010000 	 .word 440
 225 0028 D2010000 	 .word 466
 226 002c ED010000 	 .word 493
 227 0030 0B020000 	 .word 523
 228              	 .section .text.sound,"ax",%progbits
 229              	 .align 2
 230              	 .global sound
 231              	 .thumb
 232              	 .thumb_func
 234              	sound:
 235              	.LFB231:
  42:../main.c     **** 
  43:../main.c     **** void sound(char ch) {
 236              	 .loc 1 43 0
 237              	 .cfi_startproc
 238              	 
 239              	 
 240 0000 B0B5     	 push {r4,r5,r7,lr}
 241              	.LCFI17:
 242              	 .cfi_def_cfa_offset 16
 243              	 .cfi_offset 4,-16
 244              	 .cfi_offset 5,-12
 245              	 .cfi_offset 7,-8
 246              	 .cfi_offset 14,-4
 247 0002 90B0     	 sub sp,sp,#64
 248              	.LCFI18:
 249              	 .cfi_def_cfa_offset 80
 250 0004 00AF     	 add r7,sp,#0
 251              	.LCFI19:
 252              	 .cfi_def_cfa_register 7
 253 0006 0346     	 mov r3,r0
 254 0008 FB71     	 strb r3,[r7,#7]
  44:../main.c     **** 	int soundTable[] = {261, 277, 293, 311, 329, 349, 369, 392, 415, 440, 466, 493, 523};
 255              	 .loc 1 44 0
 256 000a 494B     	 ldr r3,.L28
 257 000c 07F10C04 	 add r4,r7,#12
 258 0010 1D46     	 mov r5,r3
 259 0012 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 260 0014 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 261 0016 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 262 0018 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 263 001a 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 264 001c 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 265 001e 2B68     	 ldr r3,[r5]
 266 0020 2360     	 str r3,[r4]
  45:../main.c     **** 	switch(ch) {
 267              	 .loc 1 45 0
 268 0022 FB79     	 ldrb r3,[r7,#7]
 269 0024 433B     	 subs r3,r3,#67
 270 0026 242B     	 cmp r3,#36
 271 0028 7ED8     	 bhi .L15
 272 002a 01A2     	 adr r2,.L18
 273 002c 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 274              	 .p2align 2
 275              	.L18:
 276 0030 CF000000 	 .word .L17+1
 277 0034 E3000000 	 .word .L19+1
 278 0038 29010000 	 .word .L15+1
 279 003c 01010000 	 .word .L20+1
 280 0040 15010000 	 .word .L21+1
 281 0044 29010000 	 .word .L15+1
 282 0048 29010000 	 .word .L15+1
 283 004c 29010000 	 .word .L15+1
 284 0050 29010000 	 .word .L15+1
 285 0054 29010000 	 .word .L15+1
 286 0058 29010000 	 .word .L15+1
 287 005c 29010000 	 .word .L15+1
 288 0060 29010000 	 .word .L15+1
 289 0064 29010000 	 .word .L15+1
 290 0068 29010000 	 .word .L15+1
 291 006c 29010000 	 .word .L15+1
 292 0070 29010000 	 .word .L15+1
 293 0074 29010000 	 .word .L15+1
 294 0078 29010000 	 .word .L15+1
 295 007c 29010000 	 .word .L15+1
 296 0080 29010000 	 .word .L15+1
 297 0084 29010000 	 .word .L15+1
 298 0088 29010000 	 .word .L15+1
 299 008c 29010000 	 .word .L15+1
 300 0090 29010000 	 .word .L15+1
 301 0094 29010000 	 .word .L15+1
 302 0098 29010000 	 .word .L15+1
 303 009c 29010000 	 .word .L15+1
 304 00a0 29010000 	 .word .L15+1
 305 00a4 29010000 	 .word .L15+1
 306 00a8 29010000 	 .word .L15+1
 307 00ac 1F010000 	 .word .L22+1
 308 00b0 C5000000 	 .word .L23+1
 309 00b4 D9000000 	 .word .L24+1
 310 00b8 ED000000 	 .word .L25+1
 311 00bc F7000000 	 .word .L26+1
 312 00c0 0B010000 	 .word .L27+1
 313              	 .p2align 1
 314              	.L23:
  46:../main.c     **** 		case 'c': setFrequency(soundTable[0]); break;
 315              	 .loc 1 46 0
 316 00c4 FB68     	 ldr r3,[r7,#12]
 317 00c6 1846     	 mov r0,r3
 318 00c8 FFF7FEFF 	 bl setFrequency
 319 00cc 2CE0     	 b .L15
 320              	.L17:
  47:../main.c     **** 		case 'C': setFrequency(soundTable[1]); break;
 321              	 .loc 1 47 0
 322 00ce 3B69     	 ldr r3,[r7,#16]
 323 00d0 1846     	 mov r0,r3
 324 00d2 FFF7FEFF 	 bl setFrequency
 325 00d6 27E0     	 b .L15
 326              	.L24:
  48:../main.c     **** 		case 'd': setFrequency(soundTable[2]); break;
 327              	 .loc 1 48 0
 328 00d8 7B69     	 ldr r3,[r7,#20]
 329 00da 1846     	 mov r0,r3
 330 00dc FFF7FEFF 	 bl setFrequency
 331 00e0 22E0     	 b .L15
 332              	.L19:
  49:../main.c     **** 		case 'D': setFrequency(soundTable[3]); break;
 333              	 .loc 1 49 0
 334 00e2 BB69     	 ldr r3,[r7,#24]
 335 00e4 1846     	 mov r0,r3
 336 00e6 FFF7FEFF 	 bl setFrequency
 337 00ea 1DE0     	 b .L15
 338              	.L25:
  50:../main.c     **** 		case 'e': setFrequency(soundTable[4]); break;
 339              	 .loc 1 50 0
 340 00ec FB69     	 ldr r3,[r7,#28]
 341 00ee 1846     	 mov r0,r3
 342 00f0 FFF7FEFF 	 bl setFrequency
 343 00f4 18E0     	 b .L15
 344              	.L26:
  51:../main.c     **** 		case 'f': setFrequency(soundTable[5]); break;
 345              	 .loc 1 51 0
 346 00f6 3B6A     	 ldr r3,[r7,#32]
 347 00f8 1846     	 mov r0,r3
 348 00fa FFF7FEFF 	 bl setFrequency
 349 00fe 13E0     	 b .L15
 350              	.L20:
  52:../main.c     **** 		case 'F': setFrequency(soundTable[6]); break;
 351              	 .loc 1 52 0
 352 0100 7B6A     	 ldr r3,[r7,#36]
 353 0102 1846     	 mov r0,r3
 354 0104 FFF7FEFF 	 bl setFrequency
 355 0108 0EE0     	 b .L15
 356              	.L27:
  53:../main.c     **** 		case 'g': setFrequency(soundTable[7]); break;
 357              	 .loc 1 53 0
 358 010a BB6A     	 ldr r3,[r7,#40]
 359 010c 1846     	 mov r0,r3
 360 010e FFF7FEFF 	 bl setFrequency
 361 0112 09E0     	 b .L15
 362              	.L21:
  54:../main.c     **** 		case 'G': setFrequency(soundTable[8]); break;
 363              	 .loc 1 54 0
 364 0114 FB6A     	 ldr r3,[r7,#44]
 365 0116 1846     	 mov r0,r3
 366 0118 FFF7FEFF 	 bl setFrequency
 367 011c 04E0     	 b .L15
 368              	.L22:
  55:../main.c     **** 		case 'b': setFrequency(soundTable[9]); break;
 369              	 .loc 1 55 0
 370 011e 3B6B     	 ldr r3,[r7,#48]
 371 0120 1846     	 mov r0,r3
 372 0122 FFF7FEFF 	 bl setFrequency
 373 0126 00BF     	 nop
 374              	.L15:
  56:../main.c     **** 	}
  57:../main.c     **** }
 375              	 .loc 1 57 0
 376 0128 4037     	 adds r7,r7,#64
 377              	.LCFI20:
 378              	 .cfi_def_cfa_offset 16
 379 012a BD46     	 mov sp,r7
 380              	.LCFI21:
 381              	 .cfi_def_cfa_register 13
 382              	 
 383 012c B0BD     	 pop {r4,r5,r7,pc}
 384              	.L29:
 385 012e 00BF     	 .align 2
 386              	.L28:
 387 0130 00000000 	 .word .LC0
 388              	 .cfi_endproc
 389              	.LFE231:
 391              	 .section .rodata
 392              	 .align 2
 393              	.LC1:
 394 0034 65446544 	 .ascii "eDeDebdcaceabeGbceeDeDebdcaceabecba\000"
 394      65626463 
 394      61636561 
 394      62654762 
 394      63656544 
 395              	 .section .text.main,"ax",%progbits
 396              	 .align 2
 397              	 .global main
 398              	 .thumb
 399              	 .thumb_func
 401              	main:
 402              	.LFB232:
  58:../main.c     **** 
  59:../main.c     **** int main(void)
  60:../main.c     **** {
 403              	 .loc 1 60 0
 404              	 .cfi_startproc
 405              	 
 406              	 
 407 0000 B0B5     	 push {r4,r5,r7,lr}
 408              	.LCFI22:
 409              	 .cfi_def_cfa_offset 16
 410              	 .cfi_offset 4,-16
 411              	 .cfi_offset 5,-12
 412              	 .cfi_offset 7,-8
 413              	 .cfi_offset 14,-4
 414 0002 8CB0     	 sub sp,sp,#48
 415              	.LCFI23:
 416              	 .cfi_def_cfa_offset 64
 417 0004 00AF     	 add r7,sp,#0
 418              	.LCFI24:
 419              	 .cfi_def_cfa_register 7
  61:../main.c     ****   DAVE_STATUS_t status;
  62:../main.c     **** 
  63:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 420              	 .loc 1 63 0
 421 0006 FFF7FEFF 	 bl DAVE_Init
 422 000a 0346     	 mov r3,r0
 423 000c 87F82B30 	 strb r3,[r7,#43]
  64:../main.c     **** 
  65:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 424              	 .loc 1 65 0
 425 0010 97F82B30 	 ldrb r3,[r7,#43]
 426 0014 002B     	 cmp r3,#0
 427 0016 00D0     	 beq .L31
 428              	.L32:
  66:../main.c     ****   {
  67:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  68:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
  69:../main.c     **** 
  70:../main.c     ****     while(1U)
  71:../main.c     ****     {
  72:../main.c     **** 
  73:../main.c     ****     }
 429              	 .loc 1 73 0 discriminator 1
 430 0018 FEE7     	 b .L32
 431              	.L31:
  74:../main.c     ****   }
  75:../main.c     **** 
  76:../main.c     ****   int id = SYSTIMER_CreateTimer(1000, SYSTIMER_MODE_PERIODIC, callback, NULL);
 432              	 .loc 1 76 0
 433 001a 4FF47A70 	 mov r0,#1000
 434 001e 0121     	 movs r1,#1
 435 0020 174A     	 ldr r2,.L36
 436 0022 0023     	 movs r3,#0
 437 0024 FFF7FEFF 	 bl SYSTIMER_CreateTimer
 438 0028 0346     	 mov r3,r0
 439 002a 7B62     	 str r3,[r7,#36]
  77:../main.c     ****   SYSTIMER_StartTimer(id);
 440              	 .loc 1 77 0
 441 002c 7B6A     	 ldr r3,[r7,#36]
 442 002e 1846     	 mov r0,r3
 443 0030 FFF7FEFF 	 bl SYSTIMER_StartTimer
  78:../main.c     **** 
  79:../main.c     ****   PWM_Start(&PWM_0);
 444              	 .loc 1 79 0
 445 0034 1348     	 ldr r0,.L36+4
 446 0036 FFF7FEFF 	 bl PWM_Start
 447              	.L35:
 448              	.LBB2:
  80:../main.c     **** 
  81:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
  82:../main.c     ****   while(1U)
  83:../main.c     ****   {
  84:../main.c     ****   	const char music[] = {"eDeDebdcaceabeGbceeDeDebdcaceabecba"};
 449              	 .loc 1 84 0
 450 003a 134B     	 ldr r3,.L36+8
 451 003c 3C46     	 mov r4,r7
 452 003e 1D46     	 mov r5,r3
 453 0040 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 454 0042 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 455 0044 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 456 0046 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 457 0048 2B68     	 ldr r3,[r5]
 458 004a 2360     	 str r3,[r4]
 459              	.LBB3:
  85:../main.c     ****   	for(int i = 0; i < strlen(music); i++) {
 460              	 .loc 1 85 0
 461 004c 0023     	 movs r3,#0
 462 004e FB62     	 str r3,[r7,#44]
 463 0050 0DE0     	 b .L33
 464              	.L34:
  86:../main.c     ****   		sound(music[i]);
 465              	 .loc 1 86 0 discriminator 3
 466 0052 3A46     	 mov r2,r7
 467 0054 FB6A     	 ldr r3,[r7,#44]
 468 0056 1344     	 add r3,r3,r2
 469 0058 1B78     	 ldrb r3,[r3]
 470 005a 1846     	 mov r0,r3
 471 005c FFF7FEFF 	 bl sound
  87:../main.c     ****   		delay(500);
 472              	 .loc 1 87 0 discriminator 3
 473 0060 4FF4FA70 	 mov r0,#500
 474 0064 FFF7FEFF 	 bl delay
  85:../main.c     ****   	for(int i = 0; i < strlen(music); i++) {
 475              	 .loc 1 85 0 discriminator 3
 476 0068 FB6A     	 ldr r3,[r7,#44]
 477 006a 0133     	 adds r3,r3,#1
 478 006c FB62     	 str r3,[r7,#44]
 479              	.L33:
  85:../main.c     ****   	for(int i = 0; i < strlen(music); i++) {
 480              	 .loc 1 85 0 is_stmt 0 discriminator 1
 481 006e FC6A     	 ldr r4,[r7,#44]
 482 0070 3B46     	 mov r3,r7
 483 0072 1846     	 mov r0,r3
 484 0074 FFF7FEFF 	 bl strlen
 485 0078 0346     	 mov r3,r0
 486 007a 9C42     	 cmp r4,r3
 487 007c E9D3     	 bcc .L34
 488              	.LBE3:
 489              	.LBE2:
  88:../main.c     ****   	}
  89:../main.c     ****   }
 490              	 .loc 1 89 0 is_stmt 1
 491 007e DCE7     	 b .L35
 492              	.L37:
 493              	 .align 2
 494              	.L36:
 495 0080 00000000 	 .word callback
 496 0084 00000000 	 .word PWM_0
 497 0088 34000000 	 .word .LC1
 498              	 .cfi_endproc
 499              	.LFE232:
 501              	 .text
 502              	.Letext0:
 503              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 504              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 505              	 .file 4 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 506              	 .file 5 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Libraries/XMCLib/inc/xmc4_scu.h"
 507              	 .file 6 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Libraries/XMCLib/inc/xmc_gpio.h"
 508              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Libraries/XMCLib/inc/xmc4_gpio.h"
 509              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Libraries/XMCLib/inc/xmc_ccu4.h"
 510              	 .file 9 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 511              	 .file 10 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Dave/Generated/PWM/pwm.h"
 512              	 .file 11 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Dave/Generated/SYSTIMER/systimer.h"
 513              	 .file 12 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Dave/Generated/DAVE.h"
 514              	 .file 13 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Libraries/CMSIS/Include/cmsis_gcc.h"
 515              	 .file 14 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Libraries/CMSIS/Include/core_cm4.h"
 516              	 .file 15 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 517              	 .file 16 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/PWM/Dave/Generated/PWM/PWM_Extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000004 delay1000
    {standard input}:21     .text.callback:00000000 $t
    {standard input}:26     .text.callback:00000000 callback
    {standard input}:66     .text.callback:00000020 $d
    {standard input}:71     .text.delay:00000000 $t
    {standard input}:76     .text.delay:00000000 delay
    {standard input}:122    .text.delay:00000024 $d
    {standard input}:127    .text.setFrequency:00000000 $t
    {standard input}:132    .text.setFrequency:00000000 setFrequency
    {standard input}:175    .text.setFrequency:00000028 $d
    {standard input}:180    .text.stop:00000000 $t
    {standard input}:185    .text.stop:00000000 stop
    {standard input}:208    .text.stop:00000010 $d
    {standard input}:213    .rodata:00000000 $d
    {standard input}:229    .text.sound:00000000 $t
    {standard input}:234    .text.sound:00000000 sound
    {standard input}:276    .text.sound:00000030 $d
    {standard input}:313    .text.sound:000000c4 $t
    {standard input}:387    .text.sound:00000130 $d
    {standard input}:396    .text.main:00000000 $t
    {standard input}:401    .text.main:00000000 main
    {standard input}:495    .text.main:00000080 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PWM_SetDutyCycle
PWM_SetFreq
PWM_0
DAVE_Init
SYSTIMER_CreateTimer
SYSTIMER_StartTimer
PWM_Start
strlen
